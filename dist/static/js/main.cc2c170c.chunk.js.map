{"version":3,"sources":["api/client.js","api/venues.js","utils/weatherAndDates.js","utils/filters.js","settings/colors.js","components/Badge/Badge.js","components/CityTitle/CityTitle.js","components/WeatherIcon/WeatherIcon.js","components/Cards/ContainerCard/ContainerCard.js","components/Cards/LargeCard/LargeCard.js","components/Sections/FavoritePlaces/FavoritePlaces.js","components/TempTitle/TempTitle.js","components/Cards/HeaderCard/HeaderCard.js","hooks/useFetch.js","components/Loading/Loading.js","components/Sections/Header/Header.js","utils/store.js","api/forecasteExtended.js","components/Sections/Slide/Slide.js","components/Cards/SuggestCard/SuggestCard.js","components/Sections/Suggets/Suggets.js","api/cities.js","components/Cards/CardCity/CardCity.js","components/Sections/VisitPlace/VisitPlace.js","WeatherApp.js","index.js"],"names":["BASE_URL","apiLayer","url","a","method","fetch","response","json","data","getVenues","kelvinToCelsius","temp","Math","round","dateMessage","date","dateTransform","Date","getHours","getDay","filterMainHeadquarter","venues","main","filter","venue","main_headquarter","lessHumidity","humiditys","less","forEach","item","humidity","colors","Badge","title","color","className","style","CityTitle","city","icon","background","classname","WeatherIcon","size","fontSize","ContainerCard","children","iconColor","iconSize","backgroundColor","LargeCard","desc","windSpeed","image","src","alt","FavoritePlaces","useState","setVenues","loadVenues","otherVenues","places","useEffect","id","length","map","name","sys","country","description","weather","wind","speed","TempTitle","HeaderCard","useFetch","requestFunc","loading","error","state","setState","then","catch","Loading","Header","venueAPI","mainHeadquarter","setMainHeadquarter","getMainVanue","sessionStorage","getItem","setItem","JSON","stringify","forecastExtended","Slide","forecastAPI","sliderData","setSlideItems","current","next","ctrlSlider","setCtrlSlider","change","list","getExtendedForecast","onClick","slice","idx","CarouselItem","SuggestCard","Suggets","suggetAPI","bestDay","setBestDay","getSuggestDay","suggetFilter","tempFilter","day","suggestDay","citiesPrognostic","CardCity","href","target","VisitPlace","citiesAPI","cities","setCities","getSuggetCities","suggestCities","result","WeatherApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc2c170c.chunk.js","sourcesContent":["const BASE_URL = 'https://run.mocky.io/v3';\nexport const apiLayer = async (url, method = 'GET') => {\n  const response = await fetch(BASE_URL + url, {\n    method,\n  });\n  const data = await response.json();\n  return data;\n};\n","import { apiLayer } from './client';\n\n// LOAD VENUES\nexport const getVenues = () => {\n  return apiLayer('/818d0158-727b-461e-9f76-06734ed7e582');\n};\n","export const kelvinToCelsius = (temp) => {\n  const BASE = 273.15;\n  return Math.round(temp - BASE);\n};\n\nexport const dateMessage = (date) => {\n  const dateTransform = new Date(date).getHours();\n  if (dateTransform > 4 && dateTransform < 12) return 'Good Morning';\n  else if (dateTransform >= 12 && dateTransform < 18) return 'Good Afternoon';\n  else return 'Good Nigth';\n};\n\nexport const getDay = (date) => {\n  const days = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday',\n  ];\n  const dayIndex = new Date(date).getDay();\n  return days[dayIndex];\n};\n","import { kelvinToCelsius } from './weatherAndDates';\n\nexport const filterMainHeadquarter = (venues = [], main = true) => {\n  return venues.filter((venue) => venue.main_headquarter === main);\n};\n\nexport const suggestCities = (cities = []) => {\n  return cities.filter(\n    (city) =>\n      kelvinToCelsius(city.main.temp) >= 24 &&\n      kelvinToCelsius(city.main.temp) <= 30\n  );\n};\n\nexport const suggestDay = (days = []) => {\n  const tempFilter = days.filter(\n    (day) =>\n      kelvinToCelsius(day.main.temp) >= 25 &&\n      kelvinToCelsius(day.main.temp) <= 28\n  );\n  return lessHumidity(tempFilter);\n};\n\nconst lessHumidity = (humiditys = []) => {\n  let less = humiditys[0];\n  humiditys.forEach((item) => {\n    if (item.main.humidity < less.main.humidity) {\n      less = item;\n    }\n  });\n  return less;\n};\n","export const colors = {\n  purple: '#5a00ea',\n  pink: '#d95ecd',\n  blue: '#597aef',\n  yellow: '#ffb82c',\n  light: '#e6e6e6',\n  white: '#fff',\n  medium: '#7c7c7c',\n  dark: '#505050',\n  darkpurple: '#6757ac',\n};\n","import React from 'react';\nimport './badge.scss';\n\nexport const Badge = ({ title, color, className }) => {\n  return (\n    <p className='badge'>\n      <i className='fas fa-circle mx-10' style={{ color }}></i>\n      <span className={className}>{title}</span>\n    </p>\n  );\n};\n","import React from 'react';\nimport './cityTitle.scss';\n\nexport const CityTitle = ({ city, icon, background, classname }) => {\n  return (\n    <div\n      className={`${\n        background ? 'purple-background' : ''\n      }   widget-headquarter-content`}\n    >\n      {icon && <i className='fas fa-map-marker-alt'></i>}\n      <p className={`${classname ? classname : ''} widget-headquarter`}>\n        {city}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'weather-icons/css/weather-icons.css';\n\nexport const WeatherIcon = ({ icon, color, size = 70 }) => {\n  return (\n    <div className=''>\n      <i\n        className={`wi wi-day-${icon} widget-icon`}\n        style={{ fontSize: size + 'px', color }}\n      ></i>\n    </div>\n  );\n};\n","import React from 'react';\nimport { WeatherIcon } from '../../WeatherIcon/WeatherIcon';\n\nexport const ContainerCard = ({\n  children,\n  icon,\n  iconColor,\n  iconSize,\n  backgroundColor,\n}) => {\n  return (\n    <div\n      className='container-card'\n      style={backgroundColor && { background: backgroundColor }}\n    >\n      {icon && (\n        <div className='leading-icon'>\n          <WeatherIcon icon={icon} size={iconSize} color={iconColor} />\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { colors } from '../../../settings/colors';\nimport { kelvinToCelsius } from '../../../utils/weatherAndDates';\nimport { Badge } from '../../Badge/Badge';\nimport { CityTitle } from '../../CityTitle/CityTitle';\nimport { ContainerCard } from '../ContainerCard/ContainerCard';\n\nimport './largeCard.scss';\n\nexport const LargeCard = ({\n  city,\n  desc,\n  temp,\n  humidity,\n  windSpeed,\n  icon,\n  image,\n}) => {\n  return (\n    <div className='widget-card'>\n      <ContainerCard\n        icon={icon}\n        iconSize={60}\n        backgroundColor={colors.white}\n        iconColor={colors.yellow}\n      >\n        <div className='widget-card-wrapper'>\n          <div className='widget-card-image'>\n            <img src={image} alt='city' />\n          </div>\n          <div className='content'>\n            <CityTitle city={city} icon classname='widget-headquarter-name' />\n            <p className='widget-headquarter-desc'>{desc}</p>\n            <div className='badges'>\n              <Badge\n                className='widget-temperature'\n                title={kelvinToCelsius(temp) + '° C'}\n                color={colors.yellow}\n              />\n              <Badge\n                className='widget-humidity'\n                title={humidity + '%'}\n                color={colors.pink}\n              />\n              <Badge\n                className='widget-wind'\n                title={windSpeed + ' m/s'}\n                color={colors.blue}\n              />\n            </div>\n          </div>\n        </div>\n      </ContainerCard>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getVenues } from '../../../api/venues';\nimport { filterMainHeadquarter } from '../../../utils/filters';\nimport { LargeCard } from '../../Cards/LargeCard/LargeCard';\nimport './favoritePlaces.scss';\n\nexport const FavoritePlaces = () => {\n  const [venues, setVenues] = useState([]);\n\n  const loadVenues = async () => {\n    const response = await getVenues();\n    const otherVenues = filterMainHeadquarter(response.places, false);\n    setVenues(otherVenues);\n  };\n\n  useEffect(() => {\n    loadVenues();\n  }, []);\n\n  return (\n    <section\n      id='widget-favorite'\n      className='widget-favorite animate__animated animate__slow animate__fadeInLeft'\n    >\n      <h2 className='mb-4 mt-4 title-section'>\n        Our favorite <span>places</span>\n      </h2>\n      <div className='favorite-list'>\n        {venues.length > 0 &&\n          venues.map((venue) => (\n            <LargeCard\n              key={venue.id}\n              city={`${venue?.name} - ${venue?.sys.country}`}\n              desc={venue?.description}\n              temp={venue?.main.temp}\n              humidity={venue?.main.humidity}\n              icon={venue?.weather[0].icon}\n              windSpeed={venue?.wind.speed}\n              image={venue?.image}\n            />\n          ))}\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport { kelvinToCelsius } from '../../utils/weatherAndDates';\nimport './tempTitle.scss';\nexport const TempTitle = ({ temp }) => {\n  return <p className='temp-title'>{kelvinToCelsius(temp)}° C</p>;\n};\n","import React from 'react';\nimport { colors } from '../../../settings/colors';\nimport { dateMessage } from '../../../utils/weatherAndDates';\nimport { Badge } from '../../Badge/Badge';\nimport { CityTitle } from '../../CityTitle/CityTitle';\nimport { TempTitle } from '../../TempTitle/TempTitle';\nimport { ContainerCard } from '../ContainerCard/ContainerCard';\n\nimport './headerCard.scss';\n\nexport const HeaderCard = ({\n  city,\n  temp,\n  humidity,\n  windSpeed,\n  icon,\n  image,\n  date,\n}) => {\n  return (\n    <ContainerCard icon={icon} iconSize={100} iconColor={colors.yellow}>\n      <div\n        id='widget-header'\n        className='widget-header animate__animated animate__slow animate__fadeInDown'\n      >\n        <img\n          src={image}\n          className='widget-header-image card-border'\n          alt='city'\n        />\n\n        <div className='widget-content'>\n          <CityTitle city={city} icon background />\n          <div className='mt-10'>\n            <TempTitle temp={temp} />\n          </div>\n\n          <div className='widget-content-badges mb-6'>\n            <Badge\n              className='widget-humidity'\n              title={humidity + '%'}\n              color={colors.pink}\n            />\n            <Badge\n              className='widget-wind'\n              title={windSpeed + ' m/s'}\n              color={colors.blue}\n            />\n          </div>\n\n          <div className='widget-message-date'>\n            <p>{dateMessage(date)},</p>\n            <p className='condor-text'>Condor!</p>\n          </div>\n        </div>\n      </div>\n    </ContainerCard>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport const useFetch = (requestFunc) => {\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  useEffect(() => {\n    setState({ data: null, loading: true, error: null });\n\n    requestFunc()\n      .then((data) => {\n        setState({\n          loading: false,\n          error: null,\n          data,\n        });\n      })\n      .catch(() => {\n        setState({\n          data: null,\n          loading: false,\n          error: 'No se pudo cargar la info',\n        });\n      });\n  }, [requestFunc]);\n\n  return state;\n};\n","import React from 'react';\nimport './loading.scss';\nexport const Loading = () => {\n  return (\n    <div className='loading'>\n      <i className='fas fa-spinner'></i>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { HeaderCard } from '../../Cards/HeaderCard/HeaderCard';\nimport { getVenues } from '../../../api/venues';\nimport { useFetch } from '../../../hooks/useFetch';\nimport { filterMainHeadquarter } from '../../../utils/filters';\nimport { saveVenues } from '../../../utils/store';\nimport { Loading } from '../../Loading/Loading';\n\nexport const Header = () => {\n  const venueAPI = useFetch(getVenues);\n  const [mainHeadquarter, setMainHeadquarter] = useState({});\n\n  const getMainVanue = async () => {\n    saveVenues(venueAPI.data?.places);\n    const [main] = filterMainHeadquarter(venueAPI.data?.places, true);\n    setMainHeadquarter(main);\n  };\n\n  useEffect(() => {\n    getMainVanue();\n  });\n\n  return (\n    <header>\n      {!venueAPI.loading ? (\n        <HeaderCard\n          city={mainHeadquarter?.name}\n          temp={mainHeadquarter?.main.temp}\n          humidity={mainHeadquarter?.main.humidity}\n          windSpeed={mainHeadquarter?.wind.speed}\n          icon={mainHeadquarter?.weather[0].icon}\n          image={mainHeadquarter?.image}\n          date={mainHeadquarter?.date}\n        />\n      ) : (\n        <Loading />\n      )}\n    </header>\n  );\n};\n","export const saveVenues = (data) => {\n  if (!sessionStorage.getItem('getvenues')) {\n    sessionStorage.setItem('getvenues', JSON.stringify(data));\n  }\n};\n\nexport const getVenues = () => {\n  return JSON.parse(sessionStorage.getItem('getvenues')) || [];\n};\n","import { apiLayer } from './client';\n\n// LOAD EXTENDED FIRECAST\nexport const forecastExtended = () =>\n  apiLayer('/73c29128-d158-40db-aeae-ea78a0d762b7');\n","import React, { useEffect, useState } from 'react';\nimport { colors } from '../../../settings/colors';\nimport { getDay } from '../../../utils/weatherAndDates';\nimport { Badge } from '../../Badge/Badge';\nimport { forecastExtended } from '../../../api/forecasteExtended';\n\nimport { TempTitle } from '../../TempTitle/TempTitle';\nimport { useFetch } from '../../../hooks/useFetch';\nimport './slide.scss';\n\nexport const Slide = () => {\n  const forecastAPI = useFetch(forecastExtended);\n  const [sliderData, setSlideItems] = useState([]);\n  const [ctrlSlider, setCtrlSlider] = useState({ current: 0, next: 3 });\n\n  const getExtendedForecast = () => {\n    if (forecastAPI.data) {\n      setSlideItems(forecastAPI.data?.list);\n    }\n  };\n\n  const change = () => {\n    if (ctrlSlider.next === 3) {\n      setCtrlSlider({\n        ...ctrlSlider,\n        current: 3,\n        next: 6,\n      });\n      return;\n    }\n    setCtrlSlider({\n      ...ctrlSlider,\n      current: 0,\n      next: 3,\n    });\n  };\n\n  // const prev = () => {};\n\n  useEffect(() => {\n    getExtendedForecast();\n  });\n\n  return (\n    <section\n      id='widget-carousel'\n      className='widget-carousel mt-3 animate__animated animate__slow animate__fadeInUp'\n    >\n      <div className='widget-carousel-header'>\n        <h3 className='widget-carousel-header-title'>Forecast Extended</h3>\n        <div className='wrapper-button'>\n          <button className='arrow-button' onClick={change}>\n            <i className='fas fa-arrow-left'></i>\n          </button>\n          <button className='arrow-button' onClick={change}>\n            <i className='fas fa-arrow-right'></i>\n          </button>\n        </div>\n      </div>\n      <div className='list-items'>\n        {!forecastAPI.loading &&\n          sliderData\n            .slice(ctrlSlider.current, ctrlSlider.next)\n            .map((item, idx) => (\n              <CarouselItem\n                key={idx}\n                date={item.date}\n                temp={item.main.temp}\n                humidity={item.main.humidity}\n                windSpeed={item.wind.speed}\n              />\n            ))}\n      </div>\n    </section>\n  );\n};\n\nconst CarouselItem = ({ date, temp, humidity, windSpeed }) => {\n  return (\n    <div className='widget-carousel-item'>\n      <p className='widget-day'>{getDay(date)}</p>\n      <TempTitle temp={temp} />\n      <div className='badges'>\n        <Badge title={humidity + '%'} color={colors.pink} />\n        <Badge title={windSpeed + ' m/s'} color={colors.blue} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { colors } from '../../../settings/colors';\nimport { getDay } from '../../../utils/weatherAndDates';\nimport { Badge } from '../../Badge/Badge';\nimport { CityTitle } from '../../CityTitle/CityTitle';\nimport { TempTitle } from '../../TempTitle/TempTitle';\nimport { ContainerCard } from '../ContainerCard/ContainerCard';\n\nimport './suggestCard.scss';\n\nexport const SuggestCard = ({\n  city,\n  temp,\n  humidity,\n  windSpeed,\n  icon,\n  date,\n}) => {\n  return (\n    <ContainerCard\n      icon={icon}\n      iconColor={colors.yellow}\n      backgroundColor={\n        'linear-gradient(163deg,rgba(89, 122, 239, 1)  39%,rgba(90, 0, 234, 1) 100%)'\n      }\n    >\n      <div className='wrapper-card'>\n        <CityTitle city={city} icon classname='widget-day' />\n        <TempTitle temp={temp} />\n        <div className='footer-card'>\n          <div className='badges'>\n            <Badge\n              className='widget-humidity'\n              title={humidity + '%'}\n              color={colors.pink}\n            />\n            <Badge\n              className='widget-wind'\n              title={windSpeed + ' m/s'}\n              color={colors.blue}\n            />\n          </div>\n          <p className='widget-day'>{getDay(date)}</p>\n        </div>\n      </div>\n    </ContainerCard>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { forecastExtended } from '../../../api/forecasteExtended';\nimport { useFetch } from '../../../hooks/useFetch';\nimport { suggestDay } from '../../../utils/filters';\nimport { SuggestCard } from '../../Cards/SuggestCard/SuggestCard';\n\nexport const Suggets = () => {\n  const suggetAPI = useFetch(forecastExtended);\n  const [bestDay, setBestDay] = useState({});\n\n  const getSuggestDay = () => {\n    const suggetFilter = suggestDay(suggetAPI.data?.list);\n    setBestDay(suggetFilter);\n  };\n\n  useEffect(() => {\n    getSuggestDay();\n  }, [!suggetAPI.loading]);\n\n  return (\n    <section id='widget-suggest' className='widget-suggest'>\n      <h2 className='mt-4 mb-3 title-section'>\n        HeadQuater <span>Suggest</span>\n      </h2>\n      {!suggetAPI.loading && (\n        <SuggestCard\n          city={`${suggetAPI.data?.city.name} - ${suggetAPI.data?.city.country}`}\n          temp={bestDay?.main.temp}\n          humidity={bestDay?.main.humidity}\n          date={bestDay?.date}\n          icon={bestDay?.weather[0].icon}\n          windSpeed={bestDay?.wind.speed}\n        />\n      )}\n    </section>\n  );\n};\n","import { apiLayer } from \"./client\";\n\n// Load cities prognostic\nexport const citiesPrognostic = () =>\n  apiLayer(\"/f8926877-849a-416f-8226-9fd9d9fc5e07\");\n","import React from 'react';\nimport './cardCity.scss';\n\nexport const CardCity = ({ city, image }) => {\n  return (\n    <div className='widget-card'>\n      <div className='widget-card-image'>\n        <img className='' src={image} alt='city' />\n      </div>\n      <div className='widget-card-content'>\n        <p className='widget-city-name'>{city}</p>\n        <a\n          href='https://condorlabs.io/'\n          target='_blank'\n          className='visit-button'\n        >\n          Visit place\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useFetch } from '../../../hooks/useFetch';\nimport { citiesPrognostic } from '../../../api/cities';\nimport { suggestCities } from '../../../utils/filters';\nimport { CardCity } from '../../Cards/CardCity/CardCity';\n\nimport './visitPlace.scss';\n\nexport const VisitPlace = () => {\n  const citiesAPI = useFetch(citiesPrognostic);\n  const [cities, setCities] = useState([]);\n\n  const getSuggetCities = () => {\n    const filter = suggestCities(citiesAPI.data?.result);\n    setCities(filter);\n  };\n\n  useEffect(() => {\n    getSuggetCities();\n  }, [!citiesAPI.loading]);\n\n  return (\n    <section\n      id='widget-cities'\n      className='widget-cities animate__animated animate__slow animate__fadeInRight'\n    >\n      <h2 className='mb-3 mt-4 title-section'>\n        PLACE TO <span>VISIT</span>\n      </h2>\n      {!citiesAPI.loading && (\n        <div className='cities-list'>\n          {cities.map((city) => (\n            <CardCity key={city.id} city={city.name} image={city.image} />\n          ))}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { FavoritePlaces } from './components/Sections/FavoritePlaces/FavoritePlaces';\nimport { Header } from './components/Sections/Header/Header';\nimport { Slide } from './components/Sections/Slide/Slide';\nimport { Suggets } from './components/Sections/Suggets/Suggets';\nimport { VisitPlace } from './components/Sections/VisitPlace/VisitPlace';\nimport './styles.scss';\n\nconst WeatherApp = () => {\n  return (\n    <div>\n      <Header />\n      <Slide />\n      <FavoritePlaces />\n      <VisitPlace />\n      <Suggets />\n    </div>\n  );\n};\n\nexport default WeatherApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WeatherApp from \"./WeatherApp\";\n\nReactDOM.render(<WeatherApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}